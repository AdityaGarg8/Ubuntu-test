---
name: CI
# yamllint disable-line rule:truthy
on:
  [push, workflow_dispatch]

jobs:
  kubuntuMainline:
    runs-on: ubuntu-22.04
    steps:
      - name: 'Checkout kubuntuLTS Repo'
        uses: actions/checkout@v4

      - name: Get version
        run: |
         VERSION=$(grep ^KERNEL_VERSION build.sh | head -n1| cut -d = -f2)
         REL=$(grep "PKGREL=\d*" build.sh | cut -d = -f2)
         echo "ver=${VERSION}" >> $GITHUB_ENV
         echo "release=${REL}" >> $GITHUB_ENV
          
      - name: 'Checkout kubuntuMainline Repo'
        uses: actions/checkout@v4
        with:
          ref: kubuntuMainline
          persist-credentials: false

      - name: 'Push new version to kubuntuMainline'
        id: publish
        run: |
         sed -i "s/KERNEL_VERSION=6.*/KERNEL_VERSION=${{ env.ver }}/g" build.sh
         sed -i "s/PKGREL=.*/PKGREL=${{ env.release }}/g" build.sh
         git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
         git config --local user.name "github-actions[bot]"
         git commit -m "${{ env.ver }}-${{ env.release }}" -a
      - name: Push changes to the repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
          branch: kubuntuMainline

  ISO:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: sudo ./build_in_docker.sh

      - name: print sha256sum
        run: cat output/sha256*

      - name: Generate Tag
        id: tag
        run: |
          VER=$(egrep ^KERNEL_VERSION build.sh|cut -d= -f2)
          REL=$(grep "PKGREL=\d*" build.sh | cut -d = -f2)
          echo Version is $VER
          echo "kver=${VER}" >> $GITHUB_ENV
          echo "isotag=${VER}-${REL}" >> $GITHUB_ENV

      - name: Upload iso artifact
        uses: actions/upload-artifact@v4
        with:
          name: mbp-ubuntu-${{ steps.tag.outputs.tag }}.z01
          path: ${{ github.workspace }}/output/*

      - name: Instructions for putting it back together
        run: |
          cat << EOF
          Download all the artifacts, and put them in a folder
          without other files. Then run:"
          unzip "*.z??.zip"
          cat livecd-${{ env.isotag }}-t2.z?? > cd.zip
          echo unzip cd.zip
          EOF

      - name: Release
        if: github.ref == 'refs/heads/kubuntuLTS'
        uses: softprops/action-gh-release@v2
        with:
          #files: ${{ github.workspace }}/ISO/*.tar.gz
          #files: ${{ github.workspace }}/ISO/*.iso
          files: ${{ github.workspace }}/output/*
          tag_name: v${{ env.isotag }}
          body_path: ${{ github.workspace }}/.github/workflows/instructions.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update the json
        if: github.ref == 'refs/heads/kubuntuLTS'
        run: |
          git clone https://github.com/t2linux/wiki.git
          cd wiki/docs/tools

          cat << EOF > update.py
          import json
          # Define the new links
          new_link1 = "https://github.com/t2linux/T2-Ubuntu/releases/download/v${{ env.isotag }}/kubuntu-22.04-${{ env.kver }}-t2-jammy.iso.00"
          new_link2 = "https://github.com/t2linux/T2-Ubuntu/releases/download/v${{ env.isotag }}/kubuntu-22.04-${{ env.kver }}-t2-jammy.iso.01"
          # Load the JSON file
          with open('distro-metadata.json', 'r') as file:
              data = json.load(file)
          # Function to update the links
          def update_links(distros, name, new_links):
              for distro in distros:
                  if distro['name'] == name:
                      distro['iso'] = new_links
          # Update the links
          update_links(data['all'], "Kubuntu 22.04 - Jammy Jellyfish", [new_link1, new_link2])
          # Save the updated JSON back to the file
          with open('distro-metadata.json', 'w') as file:
              json.dump(data, file, indent=2)
          print("Links updated successfully.")
          EOF

          python3 update.py
          rm update.py
          cd -

      - name: Push updated links to t2linux.org
        if: github.ref == 'refs/heads/kubuntuLTS'
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.PAT }}
        with:
          source-directory: 'wiki'
          destination-github-username: 't2linux'
          destination-repository-name: 'wiki'
          user-email: github-actions[bot]@users.noreply.github.com
          user-name: github-actions[bot]
          target-branch: main
          commit-message: Distro metadata - Update Kubuntu 22.04 to v${{ env.isotag }}
